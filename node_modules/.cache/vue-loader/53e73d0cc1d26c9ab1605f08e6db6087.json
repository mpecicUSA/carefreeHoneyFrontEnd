{"remainingRequest":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/components/SingleProduct.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/components/SingleProduct.vue","mtime":1553278813878},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props:[\"products\"],\n  data() {\n    return {\n      clicked: false\n    }\n  },\n  methods:{\n    addProductToCart(){\n        this.clicked = true;\n            setTimeout(() => {\n                this.clicked = false; \n            }, 800)\n        this.$store.commit('addToCart', this.products);\n\n        // let arrOfIds = this.$store.state.cart.map(product => product.id);\n        //   this.products.inCart++;\n        // if(arrOfIds.includes(this.products.id)){\n        //   this.$store.state.cart.map(product => product.id === this.products.id ? inCart = this.products.inCart : null)\n        // } else {\n        //   this.$store.state.cart.push(this.products)\n        // }\n    },\n    edit(){\n      this.$store.commit(\"mutateEditId\", this.products.id)\n      this.$router.push(`/edit-product/${this.products.id}`)\n    }\n  }\n};\n",{"version":3,"sources":["SingleProduct.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SingleProduct.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container >\n    <v-flex xs12 sm8 offset-sm2>\n      <v-card>\n        <v-img\n          :src='products.imgUrl'\n          aspect-ratio=\"2.75\"\n        ></v-img>\n        <v-card-title primary-title>\n          <div>\n            <h3 class=\"headline mb-0\">{{ products.title}} -- {{products.size}}</h3>\n            <div>{{products.details}}</div>\n            \n          </div>\n        </v-card-title>\n        <v-card-actions >\n          ${{products.price}}\n          <v-spacer/>\n          <v-btn center @click=\"addProductToCart\" color=\"orange\">\n            Add to Cart\n          </v-btn>\n        \n          <v-btn v-show=\"this.$store.state.user.admin\"  @click=\"edit\" color=\"orange\">Edit product</v-btn>\n          <!-- <v-btn flat @click=\"addReview(products.id,this.$store.state.user.user_id)\" color=\"orange\">Add a review</v-btn> -->\n        </v-card-actions>\n          <v-flex>\n\n          <v-alert\n          :value=\"clicked\"\n          type=\"success\"\n          >\n          {{products.title}} has been added to cart\n          </v-alert>\n          </v-flex>\n      </v-card>\n    </v-flex>\n  </v-container>\n</template>\n\n\n\n<script>\nexport default {\n  props:[\"products\"],\n  data() {\n    return {\n      clicked: false\n    }\n  },\n  methods:{\n    addProductToCart(){\n        this.clicked = true;\n            setTimeout(() => {\n                this.clicked = false; \n            }, 800)\n        this.$store.commit('addToCart', this.products);\n\n        // let arrOfIds = this.$store.state.cart.map(product => product.id);\n        //   this.products.inCart++;\n        // if(arrOfIds.includes(this.products.id)){\n        //   this.$store.state.cart.map(product => product.id === this.products.id ? inCart = this.products.inCart : null)\n        // } else {\n        //   this.$store.state.cart.push(this.products)\n        // }\n    },\n    edit(){\n      this.$store.commit(\"mutateEditId\", this.products.id)\n      this.$router.push(`/edit-product/${this.products.id}`)\n    }\n  }\n};\n</script>\n"]}]}