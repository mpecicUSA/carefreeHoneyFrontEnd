{"remainingRequest":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/views/Shop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/views/Shop.vue","mtime":1550620401627},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SingleProduct from \"../components/SingleProduct\"\nimport axios from 'axios'\naxios.get('http://localhost:8000/products').then(response => console.log(response)).catch(error => console.log(error))\nexport default {\n    components: {\n        SingleProduct\n    },\n    data(){\n        return { \n            // useful for data binding in forms most commonly used as a local state,\n            // also useful with v-model in form inputs\n            products: [s]\n        }\n    }, \n    //    mounted() {\n    // this.$http.get('localhost:8000/products').then(res => (this.products = res.json)).catch(error => console.log(error))\n    // },\n    mounted: function(){\n        // life cycle method. good for executing a dispatch to populate your data\n        // this.$store.dispatch('getAllLinks', optionalPayload);\n        //  getProducts: function() {\n        //     this.$store.dispatch(\"getAllProducts\")\n        // }\n        // getProducts() {\n            return this.$store.dispatch('fetchProductsData') \n        // }\n    },\n    methods: {\n        // this is a static method you have exectute example submit on form \n        // these methods are executed via an event\n        // use for event handling\n    },\n    computed:{\n        // these are bound to store, recalced any time you change the corresponding store value\n        // these values are good for data binding, for example, iterating over a lsit of values\n        products() {\n            return this.$store.getters.getProducts\n        },\n        cart(){\n            return this.$store.getters.getCart\n        }\n    }\n}\n",{"version":3,"sources":["Shop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Shop.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container>\n        \n        <v-layout>\n            <!-- TODO add a for loop to iterate over products and create single product with values inside for each product -->\n            <!-- <v-for=\"product in products\" :key=\"product.id\" >  -->\n                <SingleProduct  /> \n        </v-layout>\n            Cart: {{ cart }}\n            <br>\n            Products: {{ products}}\n    </v-container>\n\n</template> \n\n\n<script>\nimport SingleProduct from \"../components/SingleProduct\"\nimport axios from 'axios'\naxios.get('http://localhost:8000/products').then(response => console.log(response)).catch(error => console.log(error))\nexport default {\n    components: {\n        SingleProduct\n    },\n    data(){\n        return { \n            // useful for data binding in forms most commonly used as a local state,\n            // also useful with v-model in form inputs\n            products: [s]\n        }\n    }, \n    //    mounted() {\n    // this.$http.get('localhost:8000/products').then(res => (this.products = res.json)).catch(error => console.log(error))\n    // },\n    mounted: function(){\n        // life cycle method. good for executing a dispatch to populate your data\n        // this.$store.dispatch('getAllLinks', optionalPayload);\n        //  getProducts: function() {\n        //     this.$store.dispatch(\"getAllProducts\")\n        // }\n        // getProducts() {\n            return this.$store.dispatch('fetchProductsData') \n        // }\n    },\n    methods: {\n        // this is a static method you have exectute example submit on form \n        // these methods are executed via an event\n        // use for event handling\n    },\n    computed:{\n        // these are bound to store, recalced any time you change the corresponding store value\n        // these values are good for data binding, for example, iterating over a lsit of values\n        products() {\n            return this.$store.getters.getProducts\n        },\n        cart(){\n            return this.$store.getters.getCart\n        }\n    }\n}\n</script>\n\n\n<style>\n\n</style>\n"]}]}