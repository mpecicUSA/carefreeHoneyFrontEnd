{"remainingRequest":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/babel-loader/lib/index.js!/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/eslint-loader/index.js??ref--13-0!/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/store.js","dependencies":[{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/store.js","mtime":1550785124744},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    cart: {\n      1: 0,\n      2: 0,\n      3: 0,\n      4: 0,\n      5: 0,\n      6: 0\n    },\n    user: [],\n    editId: Number,\n    isLoggedIn: false\n  },\n  mutations: {\n    // used to change sync state\n    set_products: function set_products(state, products) {\n      state.products = products;\n    },\n    mutateEditId: function mutateEditId(state, productId) {\n      state.editId = productId;\n    }\n  },\n  actions: {\n    // Create async to pull from api -- use commit('nameOfMutation, data) to push up to mutations and update state\n    fetchProductsData: function fetchProductsData(context) {\n      axios.get(\"http://localhost:8000/products\").then(function (resp) {\n        return context.commit(\"set_products\", resp.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  },\n  getters: {\n    // used to place information from state into sub components \n    getProducts: function getProducts(state) {\n      return state.products;\n    },\n    getCart: function getCart(state) {\n      return state.cart;\n    },\n    getUser: function getUser(state) {\n      return state.user;\n    },\n    getSpecificProduct: function getSpecificProduct(state) {\n      return state.products.filter(function (product) {\n        return product.id === state.editId;\n      })[0];\n    },\n    updateCart: function updateCart(state) {\n      return state.cart.map();\n    }\n  }\n});",{"version":3,"sources":["/Users/mPecic/Documents/Galvanize/g104-capstone-submissions/carefree-honey/src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","products","cart","user","editId","Number","isLoggedIn","mutations","set_products","mutateEditId","productId","actions","fetchProductsData","context","get","then","resp","commit","data","catch","err","console","log","getters","getProducts","getCart","getUser","getSpecificProduct","filter","product","id","updateCart","map"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAE5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,IAAI,EAAE;AACJ,SAAE,CADE;AAEJ,SAAE,CAFE;AAGJ,SAAE,CAHE;AAIJ,SAAE,CAJE;AAKJ,SAAE,CALE;AAMJ,SAAE;AANE,KAFD;AAULC,IAAAA,IAAI,EAAE,EAVD;AAWLC,IAAAA,MAAM,EAAEC,MAXH;AAYLC,IAAAA,UAAU,EAAE;AAZP,GAFqB;AAgB5BC,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,YAFS,wBAEIR,KAFJ,EAEWC,QAFX,EAEoB;AAC3BD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD,KAJQ;AAKTQ,IAAAA,YALS,wBAKIT,KALJ,EAKWU,SALX,EAKqB;AAC5BV,MAAAA,KAAK,CAACI,MAAN,GAAeM,SAAf;AACD;AAPQ,GAhBiB;AAyB5BC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,iBAAiB,EAAE,2BAACC,OAAD,EAAa;AAC9BhB,MAAAA,KAAK,CAACiB,GAAN,CAAU,gCAAV,EACGC,IADH,CACQ,UAACC,IAAD;AAAA,eAAUH,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8BD,IAAI,CAACE,IAAnC,CAAV;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAFT;AAGD;AANM,GAzBmB;AAiC5BG,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,WAAW,EAAE,qBAAAxB,KAAK,EAAI;AACpB,aAAOA,KAAK,CAACC,QAAb;AACD,KAJM;AAKPwB,IAAAA,OAAO,EAAC,iBAAAzB,KAAK,EAAI;AACf,aAAOA,KAAK,CAACE,IAAb;AACD,KAPM;AAQPwB,IAAAA,OAAO,EAAC,iBAAA1B,KAAK,EAAI;AACf,aAAOA,KAAK,CAACG,IAAb;AACD,KAVM;AAWPwB,IAAAA,kBAAkB,EAAC,4BAAA3B,KAAK,EAAI;AAC1B,aAAOA,KAAK,CAACC,QAAN,CAAe2B,MAAf,CAAsB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAe9B,KAAK,CAACI,MAAzB;AAAA,OAA7B,EAA8D,CAA9D,CAAP;AACD,KAbM;AAcP2B,IAAAA,UAAU,EAAE,oBAAA/B,KAAK,EAAI;AACnB,aAAOA,KAAK,CAACE,IAAN,CAAW8B,GAAX,EAAP;AACD;AAhBM;AAjCmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\"\n\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n\n  state: {\n    products: [],\n    cart: {\n      1:0,\n      2:0,\n      3:0,\n      4:0,\n      5:0,\n      6:0\n    },\n    user: [],\n    editId: Number,\n    isLoggedIn: false\n  },\n  mutations: {\n    // used to change sync state\n    set_products(state, products){\n      state.products = products\n    },\n    mutateEditId(state, productId){\n      state.editId = productId\n    }\n  },\n  actions: {\n    // Create async to pull from api -- use commit('nameOfMutation, data) to push up to mutations and update state\n    fetchProductsData: (context) => {\n      axios.get(\"http://localhost:8000/products\")\n        .then((resp) => context.commit(\"set_products\",resp.data))\n        .catch((err) => console.log(err))\n    }\n  },\n  getters: {\n    // used to place information from state into sub components \n    getProducts: state => {\n      return state.products\n    },\n    getCart:state => {\n      return state.cart\n    },\n    getUser:state => {\n      return state.user\n    },\n    getSpecificProduct:state => {\n      return state.products.filter(product => product.id === state.editId)[0]\n    },\n    updateCart: state => {\n      return state.cart.map()\n    }\n\n  }\n});\n"]}]}